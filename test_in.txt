SIMPLE={can,you,pass,something,simple,as,this|<you,can>,<simple,as>,<as,this>}
iprint(SIMPLE)
print(!SIMPLE+!!SIMPLE-SIMPLE)
SIMPLE={this,is,   ,supposed,to,be,an,error|a}
G1=!!SIMPLE*SIMPLE-SIMPLE+(SIMPLE+SIMPLE-SIMPLE)-SIMPLE+{}+(!{a,b}*{k})+{f}*{}
print(G1)
G1=!!SIMPLE*SIMPLE-SIMPLE+((SIMPLE+SIMPLE-SIMPLE)-SIMPLE+{})+(!{a,b}*{k})+{f}*{}
print(G1)
print(((((({a}+{b}+{c})+{f}+{g}+(!{k,b}))))))
save({saveMe  , Please,  I,D0nt,W4nt,T0,Fa1l|<saveMe  , Please >},  output_1.gf  )
print(!(!(!(!(!(!!({A,B})+load(output_1.gf)))))))
G2=G1+!G1*{n0,m4tt3r,h0w,l0ng|<n0,m4773r>,<h0w,l0ng>}+{or,c0mpl3x}*{}+{an,expression,is}^({it,just,wont,compile|<a,b>}+{if,the,is,a,fault,in,the,middle})*{}*{}
G3=G1+{a,b}*!!!{}+!!!!!G2
G2={Always,Look,On,The,Bright,Side,Of,Life|}+({todo,todoo,todooo,toodo}*({}+!!!!!!{The,Semester,Is,Finally,Over|< Semester,Is>,<Is,Semester>,<Over,Finally>})+{XDLOL})
print(G2)
save(G2+!{This,Is,Getting,Ridiculus}^{a,b},output_1)
G3=load(output_*1)
G3=load(output_1)
print(G3)
who
delete(G#)
delete(G 3)
delete(     G3 )
who3
who={a}
re set     ={}
reset
quit       , 
reset1=  { reset,quit| <reset,quit> }
reset1=  { reset,quit| <reset,quit>, <reset,quit> }
print(reset1)
prettyGraph  = reset1 +{print,save,quit,reset,launch,deport,tea,table,spoon  }^{}+!!reset1-reset1
Gcalc=prettyGraph*(prettyGraph+{b,bb})*(((((!!{})+{}))))+!!!{a,b}
GCalc={}+(Gcalc+Gcalc+{})
reset
who
Gcalc=GCalc
loadRoar =!(({[;af][;[nasty[[;]]]],b,af|<b,af>})+{a,b,c|<a,b>,<a,c>}^{a,c|<c,a>,<c,a>})
loadRoar =!(({[;af][;[nasty[[;]]]],b,af|<b,af>})+{a,b,c|<a,b>,<a,c>}^{a,c|<c,a>,<a,c>})
print({printingLoadRoar}+loadRoar)
save(loadRoar*loadRoar-(loadRoar*loadRoar),output_2.gf      )+
save(loadRoar*loadRoar-(loadRoar*loadRoar),output_2.gf      )
save(loadRoar,output_1)
KingHaim={This,is,my,  Pokem0n|  }+ (({}+  (   {}) ^ {a,b,c})load  (  output_1  )+load (output_1) +load(  output_2.gf   ))
KingHaim={This,is,my,  Pokem0n|  }+ (({}+  (   {}) ^ {a,b,c})+load  (  output_1  )+load (output_1) +load(  output_2.gf   ))
print(KingHaim)
print(loadRoar)
save( {a,b,c | < a,b>},  ab_file. ggf ;    )
b=(((((load(ab_file. ggf ;    )+{}+{a,b}+!{a,b}+((({a,b}+load(ab_file. ggf ;)+{a,d}+{})))+{d,c}+{}+load( ab_file. ggf ;))))))
Final Boss= {}
save (  !({this,is,the,end}+{ S[;]murfs  , Olymp[i;]][i]cs,Matrix, tf2  }*{Graph,Parser| <Graph,Parser>}, final file-+{}+-put  here  )
FinalBoss= ((({Start}+load(ab_file. ggf ;)+!((load(final file-+{}+-put  here)+load(    final file-+{}+-put  here     )+({Final} ^ {please, pass}))+{lastThing}))))
print((!!!!!!(!(FinalBoss+{Really}))))